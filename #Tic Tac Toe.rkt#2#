#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.12 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 58 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 9254 0 29 3 16 #"#lang racket/gui"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 38 #";Functions that generate game's matrix"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"generateMatrix"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"    (( "
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 2 #">="
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 3 #") ("
0 0 14 3 2 #">="
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 2 #"<="
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 3 #") ("
0 0 14 3 2 #"<="
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 2 #"))"
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 18 #"generateMatrix_aux"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 1 #"'"
0 0 25 3 7 #"() ))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 18 #"generateMatrix_aux"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 10 #"ininumcols"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 2 #") "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 3 #") ("
0 0 14 3 18 #"generateMatrix_aux"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 10 #"ininumcols"
0 0 25 3 1 #" "
0 0 14 3 10 #"ininumcols"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"() ("
0 0 14 3 6 #"append"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 18 #"generateMatrix_aux"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 10 #"ininumcols"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"-"
0 0 25 3 3 #")) "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 57 #";Function to get an element at a given position in a list"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 14 3 5 #"mlist"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"    (( "
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 5 #"mlist"
0 0 25 3 4 #")) ("
0 0 14 3 2 #"<="
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 17 3 18 #";validates indexes"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 5 #"mlist"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 5 #"mlist"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 59
#";Function to get an element at a given position in a matrix"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"getAtMatrix"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexi"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexj"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexj"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexi"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 57 #";Function to set an element at a given position in a list"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"setAt"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 14 3 7 #"element"
0 0 25 3 1 #" "
0 0 14 3 5 #"mlist"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"    (( "
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 5 #"mlist"
0 0 25 3 4 #")) ("
0 0 14 3 2 #"<="
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 17 3 18 #";validates indexes"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 7 #"element"
0 0 25 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 5 #"mlist"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 5 #"mlist"
0 0 25 3 4 #")) ("
0 0 14 3 5 #"setAt"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 7 #"element"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 5 #"mlist"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 60
#";Functions to set an element at a given position in a matrix"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"setAtMatrix"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexi"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexj"
0 0 25 3 1 #" "
0 0 14 3 7 #"element"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"    (( "
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexi"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 2 #"<="
0 0 25 3 1 #" "
0 0 14 3 6 #"indexi"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexj"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 5 #"))) ("
0 0 14 3 2 #"<="
0 0 25 3 1 #" "
0 0 14 3 6 #"indexj"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 2 #") "
0 0 17 3 18 #";validates indexes"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 15 #"setAtMatrix_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexi"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexj"
0 0 25 3 1 #" "
0 0 14 3 7 #"element"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                  "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"setAtMatrix_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexi"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexj"
0 0 25 3 1 #" "
0 0 14 3 7 #"element"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexi"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 5 #"setAt"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexj"
0 0 25 3 1 #" "
0 0 14 3 7 #"element"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 5 #"))) ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 15 #"setAtMatrix_aux"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexi"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 6 #"indexj"
0 0 25 3 1 #" "
0 0 14 3 7 #"element"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 46 #";Function that returns a column given an index"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"getColumn"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexj"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"    (( "
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexj"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 5 #"))) ("
0 0 14 3 2 #"<="
0 0 25 3 1 #" "
0 0 14 3 6 #"indexj"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 17 3 18 #";validates indexes"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 13 #"getColumn_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexj"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"getColumn_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexj"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 3 #"  ("
0 0 14 3 13 #"getColumn_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexj"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 11 #"getAtMatrix"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexj"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 43 #";Function that returns a row given an index"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"getRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexi"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"    (( "
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexi"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 2 #"<="
0 0 25 3 1 #" "
0 0 14 3 6 #"indexi"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 17 3 18 #";validates indexes"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 10 #"getRow_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexi"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")) "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"getRow_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexi"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"getRow_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexi"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 11 #"getAtMatrix"
0 0 25 3 1 #" "
0 0 14 3 6 #"indexi"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 60
#";Function that gets a diagonal in square or nonsquare matrix"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"getDiagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #") ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 5 #"))) ("
0 0 14 3 17 #"getSquareDiagonal"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 1 #">"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 20 #"getNonSquareDiagonal"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #") ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 20 #"getNonSquareDiagonal"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #") ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #"))  "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";Function that gets the diagonal of a square matrix"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 17 #"getSquareDiagonal"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 17 #"getSquareDiagonal"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 11 #"getAtMatrix"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 55 #";Function that gets the diagonals of a nonsquare matrix"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 20 #"getNonSquareDiagonal"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 1 #" "
0 0 14 3 9 #"indexdiag"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 8 #"numdiags"
0 0 25 3 1 #" "
0 0 14 3 7 #"pardiag"
0 0 25 3 1 #" "
0 0 14 3 7 #"totdiag"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 8 #"numdiags"
0 0 25 3 2 #") "
0 0 14 3 7 #"totdiag"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 9 #"indexdiag"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 4 #")) ("
0 0 14 3 20 #"getNonSquareDiagonal"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 9 #"indexdiag"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 9 #"indexdiag"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 8 #"numdiags"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 4 #"() ("
0 0 14 3 6 #"append"
0 0 25 3 1 #" "
0 0 14 3 7 #"totdiag"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 7 #"pardiag"
0 0 25 3 3 #")) "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 20 #"getNonSquareDiagonal"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 9 #"indexdiag"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 8 #"numdiags"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 1 #" "
0 0 14 3 7 #"pardiag"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 11 #"getAtMatrix"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #"))) "
0 0 14 3 7 #"totdiag"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 9 #"indexdiag"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 4 #")) ("
0 0 14 3 20 #"getNonSquareDiagonal"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 9 #"indexdiag"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 9 #"indexdiag"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 8 #"numdiags"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 4 #"() ("
0 0 14 3 6 #"append"
0 0 25 3 1 #" "
0 0 14 3 7 #"totdiag"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 7 #"pardiag"
0 0 25 3 3 #")) "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 20 #"getNonSquareDiagonal"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 9 #"indexdiag"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 8 #"numdiags"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 1 #" "
0 0 14 3 7 #"pardiag"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 11 #"getAtMatrix"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #"))) "
0 0 14 3 7 #"totdiag"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"       ))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 68
#";Function that gets a inverse diagonal in square or nonsquare matrix"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"getInvDiagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #") ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 5 #"))) ("
0 0 14 3 20 #"getSquareInvDiagonal"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 1 #">"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 23 #"getNonSquareInvDiagonal"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #") ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 23 #"getNonSquareInvDiagonal"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")) "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #") ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #"))  "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 14 3 6 #"matrix"
0 0 25 3 6 #"))))  "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 60
#";Function that gets the  inverse diagonal of a square matrix"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 20 #"getSquareInvDiagonal"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 20 #"getSquareInvDiagonal"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 11 #"getAtMatrix"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 63
#";Function that gets the inverse diagonals of a nonsquare matrix"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 23 #"getNonSquareInvDiagonal"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 3 #"   "
0 0 14 3 9 #"indexdiag"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 8 #"numdiags"
0 0 25 3 1 #" "
0 0 14 3 7 #"pardiag"
0 0 25 3 1 #" "
0 0 14 3 7 #"totdiag"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 8 #"numdiags"
0 0 25 3 2 #") "
0 0 14 3 7 #"totdiag"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 9 #"indexdiag"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 4 #")) ("
0 0 14 3 23 #"getNonSquareInvDiagonal"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 9 #"indexdiag"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 9 #"indexdiag"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 8 #"numdiags"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 4 #"() ("
0 0 14 3 6 #"append"
0 0 25 3 2 #"  "
0 0 14 3 7 #"totdiag"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 7 #"pardiag"
0 0 25 3 3 #")) "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 23 #"getNonSquareInvDiagonal"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 9 #"indexdiag"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 8 #"numdiags"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 11 #"getAtMatrix"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")) "
0 0 14 3 7 #"pardiag"
0 0 25 3 3 #" ) "
0 0 14 3 7 #"totdiag"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 9 #"indexdiag"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 4 #")) ("
0 0 14 3 23 #"getNonSquareInvDiagonal"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 9 #"indexdiag"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 7 #"numcols"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 9 #"indexdiag"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 8 #"numdiags"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 4 #"() ("
0 0 14 3 6 #"append"
0 0 25 3 2 #"  "
0 0 14 3 7 #"totdiag"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 7 #"pardiag"
0 0 25 3 4 #") ) "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 23 #"getNonSquareInvDiagonal"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 9 #"indexdiag"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 8 #"numdiags"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 2 #"  "
0 0 14 3 7 #"pardiag"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 11 #"getAtMatrix"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #"))) "
0 0 14 3 7 #"totdiag"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";Function that verifies if there's a win"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"checkVictory"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 15 #"checkVictoryRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 18 #"checkVictoryColumn"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 20 #"checkVictoryDiagonal"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 48 #";Functions that verify if there's a win in a row"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"checkVictoryRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 19 #"checkVictoryRow_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #" ))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 19 #"checkVictoryRow_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 7 #"numRows"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 7 #"numRows"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 8 #"checkRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 6 #"getRow"
0 0 25 3 1 #" "
0 0 14 3 7 #"numRows"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 19 #"checkVictoryRow_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numRows"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";Functions that verify if there's a win in a column"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 18 #"checkVictoryColumn"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 22 #"checkVictoryColumn_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")) "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #" ))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 22 #"checkVictoryColumn_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 7 #"numCols"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 7 #"numCols"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 8 #"checkRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 9 #"getColumn"
0 0 25 3 1 #" "
0 0 14 3 7 #"numCols"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 22 #"checkVictoryColumn_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numCols"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";Functions that verify if there's a win in a diagonal"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 20 #"checkVictoryDiagonal"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #") ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 8 #"checkRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 12 #"getDiagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 8 #"checkRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 15 #"getInvDiagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 24 #"checkVictoryDiagonal_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 12 #"getDiagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 24 #"checkVictoryDiagonal_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 15 #"getInvDiagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 24 #"checkVictoryDiagonal_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 9 #"diagonals"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 9 #"diagonals"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 8 #"checkRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 9 #"diagonals"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 24 #"checkVictoryDiagonal_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 9 #"diagonals"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 17 3 87
(
 #";Function that checks if all the elements in a row are the same as t"
 #"he player's token  "
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"checkRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 2 #") "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 2 #") "
0 0 14 3 6 #"player"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 8 #"checkRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 64
#";Functions that count how many elements are left to fill the row"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"countRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 12 #"countRow_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"countRow_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 1 #" "
0 0 14 3 9 #"lengthrow"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 9 #"lengthrow"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 2 #") "
0 0 14 3 6 #"player"
0 0 25 3 3 #") ("
0 0 14 3 12 #"countRow_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 2 #") "
0 0 14 3 9 #"lengthrow"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 12 #"countRow_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 2 #") "
0 0 14 3 9 #"lengthrow"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 76
(
 #";Function that counts how many elements different from a token  are "
 #"in a row"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"countRowD"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"X"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"O"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 9 #"countRowD"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #" ("
0 0 14 3 9 #"countRowD"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"X"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 9 #"countRowD"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #" ("
0 0 14 3 9 #"countRowD"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 8 #"))))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 102
(
 #";Function that returns a list with lists with the indexes of all the"
 #" available positions in the matrix"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 21 #"getAvailablePositions"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 25 #"getAvailablePositions_aux"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #") ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")) "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 25 #"getAvailablePositions_aux"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 1 #" "
0 0 14 3 7 #"poslist"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 14 3 7 #"poslist"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #")) ("
0 0 14 3 25 #"getAvailablePositions_aux"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 7 #"poslist"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 11 #"getAtMatrix"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 25 #"getAvailablePositions_aux"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 6 #"append"
0 0 25 3 1 #" "
0 0 14 3 7 #"poslist"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 4 #"))) "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 25 #"getAvailablePositions_aux"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 7 #"poslist"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 98
(
 #";Function that returns a list with lists with the indexes of all the"
 #" available positions in a line"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"getEmpPos"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 13 #"getEmpPos_aux"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 3 #") ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 3 #") ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 3 #") ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 4 #")) ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #") ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #"))"
0 0 22 3 1 #"'"
0 0 25 3 5 #"() ))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"getEmpPos_aux"
0 0 25 3 1 #" "
0 0 14 3 4 #"aux1"
0 0 25 3 1 #" "
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 2 #") "
0 0 14 3 6 #"result"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"row"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"-"
0 0 25 3 3 #") ("
0 0 14 3 13 #"getEmpPos_aux"
0 0 25 3 1 #" "
0 0 14 3 4 #"aux1"
0 0 25 3 1 #" "
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 3 #")) "
0 0 14 3 6 #"result"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 13 #"getEmpPos_aux"
0 0 25 3 1 #" "
0 0 14 3 4 #"aux1"
0 0 25 3 1 #" "
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"column"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"-"
0 0 25 3 3 #") ("
0 0 14 3 13 #"getEmpPos_aux"
0 0 25 3 1 #" "
0 0 14 3 4 #"aux1"
0 0 25 3 1 #" "
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 4 #" )) "
0 0 14 3 6 #"result"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 13 #"getEmpPos_aux"
0 0 25 3 1 #" "
0 0 14 3 4 #"aux1"
0 0 25 3 1 #" "
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 8 #"diagonal"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"-"
0 0 25 3 3 #") ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 2 #"))"
0 0 17 3 22 #";REVISAAAAAAAAAAAAAAAR"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 13 #"getEmpPos_aux"
0 0 25 3 1 #" "
0 0 14 3 4 #"aux1"
0 0 25 3 1 #" "
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 14 3 7 #"lenline"
0 0 25 3 3 #")) "
0 0 14 3 6 #"result"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"-"
0 0 25 3 3 #") ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 13 #"getEmpPos_aux"
0 0 25 3 1 #" "
0 0 14 3 4 #"aux1"
0 0 25 3 1 #" "
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 5 #")))) "
0 0 14 3 6 #"result"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"-"
0 0 25 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 13 #"getEmpPos_aux"
0 0 25 3 1 #" "
0 0 14 3 4 #"aux1"
0 0 25 3 1 #" "
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 3 #")) "
0 0 14 3 6 #"result"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 13 #"getEmpPos_aux"
0 0 25 3 1 #" "
0 0 14 3 4 #"aux1"
0 0 25 3 1 #" "
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 6 #"result"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 11 #"invdiagonal"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"-"
0 0 25 3 3 #") ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 13 #"getEmpPos_aux"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 4 #"aux1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")  "
0 0 14 3 4 #"type"
0 0 25 3 2 #"  "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 14 3 4 #"aux1"
0 0 25 3 3 #")) "
0 0 14 3 6 #"result"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"-"
0 0 25 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 13 #"getEmpPos_aux"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 4 #"aux1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 14 3 4 #"aux1"
0 0 25 3 3 #")) "
0 0 14 3 6 #"result"
0 0 25 3 12 #")))         "
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"-"
0 0 25 3 3 #") ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 13 #"getEmpPos_aux"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 4 #"aux1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 4 #"type"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 4 #"line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 3 #")) "
0 0 14 3 6 #"result"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          (("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 4 #")) ("
0 0 14 3 13 #"getEmpPos_aux"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 4 #"aux1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 4 #"line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 6 #"result"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 13 #"getEmpPos_aux"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 4 #"aux1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 4 #"type"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 4 #"line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"lenline"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 6 #"result"
0 0 25 3 8 #"))))))))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 114
(
 #";Function that returns the type, number, quantity of tokens to win, "
 #"line which is closest to win, and blank spaces"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"getMostFullLine"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 19 #"getMostFullLine_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 19 #"getMostFullLine_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #" "
0 0 14 3 7 #"greater"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #" ("
0 0 14 3 14 #"getMostFullRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #"  "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 5 #"())) "
0 0 14 3 7 #"greater"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 19 #"getMostFullLine_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #" ("
0 0 14 3 14 #"getMostFullRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #"  "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 6 #"())) ("
0 0 14 3 14 #"getMostFullRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #"  "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 5 #"())))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #" ("
0 0 14 3 17 #"getMostFullColumn"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")) "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 5 #"())) "
0 0 14 3 7 #"greater"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 19 #"getMostFullLine_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #" ("
0 0 14 3 17 #"getMostFullColumn"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")) "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 6 #"())) ("
0 0 14 3 17 #"getMostFullColumn"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")) "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 5 #"())))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #" ("
0 0 14 3 19 #"getMostFullDiagonal"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 12 #"getDiagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 12 #"getDiagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 6 #"()))  "
0 0 14 3 7 #"greater"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 19 #"getMostFullLine_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #" ("
0 0 14 3 19 #"getMostFullDiagonal"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 12 #"getDiagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 12 #"getDiagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 6 #"())) ("
0 0 14 3 19 #"getMostFullDiagonal"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 12 #"getDiagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 12 #"getDiagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 6 #"()))) "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #" ("
0 0 14 3 22 #"getMostFullInvDiagonal"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 15 #"getInvDiagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 15 #"getInvDiagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 5 #"())) "
0 0 14 3 7 #"greater"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 19 #"getMostFullLine_aux"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #" ("
0 0 14 3 22 #"getMostFullInvDiagonal"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 15 #"getInvDiagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 15 #"getInvDiagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 6 #"())) ("
0 0 14 3 22 #"getMostFullInvDiagonal"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 15 #"getInvDiagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 15 #"getInvDiagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 5 #"())))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 2 #") "
0 0 14 3 6 #"result"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 9 #"getEmpPos"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 8 #"))))))))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 108
(
 #";Function that returns the type, number of row, quantity of tokens a"
 #"nd row where there is more chance to win"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"getMostFullRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 10 #"greatindex"
0 0 25 3 1 #" "
0 0 14 3 7 #"greater"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 3 #") ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"row"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 10 #"greatindex"
0 0 25 3 1 #" "
0 0 14 3 7 #"greater"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 4 #"))) "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 8 #"countRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")) "
0 0 14 3 7 #"greater"
0 0 25 3 3 #") ("
0 0 14 3 5 #"zero?"
0 0 25 3 2 #" ("
0 0 14 3 9 #"countRowD"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 14 #"getMostFullRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 2 #" ("
0 0 14 3 8 #"countRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 14 #"getMostFullRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 10 #"greatindex"
0 0 25 3 1 #" "
0 0 14 3 7 #"greater"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 114
(
 #";Function that returns the type, number of column, quantity of token"
 #"s and column where there is more chance to win"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 17 #"getMostFullColumn"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 10 #"greatindex"
0 0 25 3 1 #" "
0 0 14 3 7 #"greater"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 3 #") ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"column"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 10 #"greatindex"
0 0 25 3 1 #" "
0 0 14 3 7 #"greater"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 4 #"))) "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 8 #"countRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 9 #"getColumn"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")) "
0 0 14 3 7 #"greater"
0 0 25 3 3 #") ("
0 0 14 3 5 #"zero?"
0 0 25 3 2 #" ("
0 0 14 3 9 #"countRowD"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 9 #"getColumn"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 17 #"getMostFullColumn"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 2 #" ("
0 0 14 3 8 #"countRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 9 #"getColumn"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #" ("
0 0 14 3 9 #"getColumn"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 17 #"getMostFullColumn"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 10 #"greatindex"
0 0 25 3 1 #" "
0 0 14 3 7 #"greater"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 151
(
 #";Function that returns the type, number of diagonal (from left to ri"
 #"ght, up to down), quantity of tokens and diagonal where there is mor"
 #"e chance to win"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 19 #"getMostFullDiagonal"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 10 #"greatindex"
0 0 25 3 1 #" "
0 0 14 3 7 #"greater"
0 0 25 3 1 #" "
0 0 14 3 12 #"numdiagonals"
0 0 25 3 1 #" "
0 0 14 3 9 #"diagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 9 #"diagonals"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 5 #"zero?"
0 0 25 3 2 #" ("
0 0 14 3 9 #"countRowD"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 9 #"diagonals"
0 0 25 3 4 #")) ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 8 #"diagonal"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 8 #"countRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 9 #"diagonals"
0 0 25 3 3 #")  "
0 0 14 3 9 #"diagonals"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 8 #"diagonal"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 7 #"())))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 12 #"numdiagonals"
0 0 25 3 3 #") ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 8 #"diagonal"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 10 #"greatindex"
0 0 25 3 1 #" "
0 0 14 3 7 #"greater"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 8 #"countRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 12 #"numdiagonals"
0 0 25 3 1 #" "
0 0 14 3 9 #"diagonals"
0 0 25 3 3 #")) "
0 0 14 3 7 #"greater"
0 0 25 3 3 #") ("
0 0 14 3 5 #"zero?"
0 0 25 3 2 #" ("
0 0 14 3 9 #"countRowD"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #"("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 12 #"numdiagonals"
0 0 25 3 1 #" "
0 0 14 3 9 #"diagonals"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 19 #"getMostFullDiagonal"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 12 #"numdiagonals"
0 0 25 3 2 #" ("
0 0 14 3 8 #"countRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 12 #"numdiagonals"
0 0 25 3 1 #" "
0 0 14 3 9 #"diagonals"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 12 #"numdiagonals"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 9 #"diagonals"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 12 #"numdiagonals"
0 0 25 3 1 #" "
0 0 14 3 9 #"diagonals"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 19 #"getMostFullDiagonal"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 10 #"greatindex"
0 0 25 3 1 #" "
0 0 14 3 7 #"greater"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 12 #"numdiagonals"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 9 #"diagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 157
(
 #";Function that returns the type, number of invdiagonal (from left to"
 #" right, up to down), quantity of tokens and invdiagonal where there "
 #"is more chance to win"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 22 #"getMostFullInvDiagonal"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 10 #"greatindex"
0 0 25 3 1 #" "
0 0 14 3 7 #"greater"
0 0 25 3 1 #" "
0 0 14 3 15 #"numinvdiagonals"
0 0 25 3 1 #" "
0 0 14 3 12 #"invdiagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 12 #"invdiagonals"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 5 #"zero?"
0 0 25 3 2 #" ("
0 0 14 3 9 #"countRowD"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 12 #"invdiagonals"
0 0 25 3 4 #")) ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 11 #"invdiagonal"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 8 #"countRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 12 #"invdiagonals"
0 0 25 3 2 #") "
0 0 14 3 12 #"invdiagonals"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 11 #"invdiagonal"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 7 #"())))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 15 #"numinvdiagonals"
0 0 25 3 3 #") ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 11 #"invdiagonal"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 10 #"greatindex"
0 0 25 3 1 #" "
0 0 14 3 7 #"greater"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 8 #"countRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 15 #"numinvdiagonals"
0 0 25 3 1 #" "
0 0 14 3 12 #"invdiagonals"
0 0 25 3 3 #")) "
0 0 14 3 7 #"greater"
0 0 25 3 3 #") ("
0 0 14 3 5 #"zero?"
0 0 25 3 2 #" ("
0 0 14 3 9 #"countRowD"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #"("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 15 #"numinvdiagonals"
0 0 25 3 1 #" "
0 0 14 3 12 #"invdiagonals"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 22 #"getMostFullInvDiagonal"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 15 #"numinvdiagonals"
0 0 25 3 2 #" ("
0 0 14 3 8 #"countRow"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 15 #"numinvdiagonals"
0 0 25 3 1 #" "
0 0 14 3 12 #"invdiagonals"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 15 #"numinvdiagonals"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 12 #"invdiagonals"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 14 3 15 #"numinvdiagonals"
0 0 25 3 1 #" "
0 0 14 3 12 #"invdiagonals"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 22 #"getMostFullInvDiagonal"
0 0 25 3 1 #" "
0 0 14 3 6 #"player"
0 0 25 3 1 #" "
0 0 14 3 10 #"greatindex"
0 0 25 3 1 #" "
0 0 14 3 7 #"greater"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 15 #"numinvdiagonals"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 12 #"invdiagonals"
0 0 25 3 1 #" "
0 0 14 3 6 #"result"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 63
#";Function that checks viability to put a token in certain place"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"checkViability"
0 0 25 3 1 #" "
0 0 14 3 7 #"player1"
0 0 25 3 1 #" "
0 0 14 3 7 #"player2"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 18 #"checkViability_aux"
0 0 25 3 1 #" "
0 0 14 3 7 #"player1"
0 0 25 3 1 #" "
0 0 14 3 7 #"player2"
0 0 25 3 2 #" ("
0 0 14 3 15 #"getMostFullLine"
0 0 25 3 1 #" "
0 0 14 3 7 #"player1"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #") ("
0 0 14 3 15 #"getMostFullLine"
0 0 25 3 1 #" "
0 0 14 3 7 #"player2"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #") ("
0 0 14 3 21 #"getAvailablePositions"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 18 #"checkViability_aux"
0 0 25 3 1 #" "
0 0 14 3 7 #"player1"
0 0 25 3 1 #" "
0 0 14 3 7 #"player2"
0 0 25 3 1 #" "
0 0 14 3 6 #"gamep1"
0 0 25 3 1 #" "
0 0 14 3 6 #"gamep2"
0 0 25 3 1 #" "
0 0 14 3 13 #"avaipositions"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 6 #"gamep1"
0 0 25 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 6 #"gamep2"
0 0 25 3 3 #")) "
0 0 19 3 10 #"\"gameover\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 6 #"gamep2"
0 0 25 3 4 #")) ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 6 #"gamep2"
0 0 25 3 3 #")) "
0 0 22 3 1 #"1"
0 0 25 3 4 #")) ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 6 #"gamep2"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 6 #"gamep1"
0 0 25 3 3 #") ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 6 #"gamep2"
0 0 25 3 4 #"))) "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 6 #"gamep1"
0 0 25 3 3 #")) "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 6 #"gamep1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 6 #"gamep2"
0 0 25 3 3 #") ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 6 #"gamep1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 2 #" ("
0 0 14 3 12 #"intersection"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 6 #"gamep1"
0 0 25 3 3 #") ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 6 #"gamep2"
0 0 25 3 6 #")))) ("
0 0 14 3 3 #"car"
0 0 25 3 2 #" ("
0 0 14 3 12 #"intersection"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 6 #"gamep1"
0 0 25 3 3 #") ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 6 #"gamep2"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 5 #"getAt"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 6 #"gamep1"
0 0 25 3 7 #")))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";Function that puts the token where it is more viable"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"putToken"
0 0 25 3 1 #" "
0 0 14 3 7 #"player1"
0 0 25 3 1 #" "
0 0 14 3 7 #"player2"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"list?"
0 0 25 3 2 #" ("
0 0 14 3 14 #"checkViability"
0 0 25 3 1 #" "
0 0 14 3 7 #"player1"
0 0 25 3 1 #" "
0 0 14 3 7 #"player2"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 5 #"print"
0 0 25 3 2 #" ("
0 0 14 3 14 #"checkViability"
0 0 25 3 1 #" "
0 0 14 3 7 #"player1"
0 0 25 3 1 #" "
0 0 14 3 7 #"player2"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 7 #"newline"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 11 #"setAtMatrix"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 2 #" ("
0 0 14 3 14 #"checkViability"
0 0 25 3 1 #" "
0 0 14 3 7 #"player1"
0 0 25 3 1 #" "
0 0 14 3 7 #"player2"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"cadr"
0 0 25 3 2 #" ("
0 0 14 3 14 #"checkViability"
0 0 25 3 1 #" "
0 0 14 3 7 #"player1"
0 0 25 3 1 #" "
0 0 14 3 7 #"player2"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #")) "
0 0 14 3 7 #"player2"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 26 #"\"No movements left to win\""
0 0 25 3 2 #") "
0 0 14 3 6 #"matrix"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 57 #";Function that declares if an element is in a list or not"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"miembro"
0 0 25 3 1 #" "
0 0 14 3 3 #"ele"
0 0 25 3 1 #" "
0 0 14 3 5 #"lista"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 5 #"lista"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 5 #"lista"
0 0 25 3 2 #") "
0 0 14 3 3 #"ele"
0 0 25 3 2 #") "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 7 #"miembro"
0 0 25 3 1 #" "
0 0 14 3 3 #"ele"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 5 #"lista"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 69
(
 #";Function that returns the elements of intersection between two list"
 #"s"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"intersection"
0 0 25 3 1 #" "
0 0 14 3 5 #"line1"
0 0 25 3 1 #" "
0 0 14 3 5 #"line2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 5 #"line1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 7 #"miembro"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 5 #"line1"
0 0 25 3 2 #") "
0 0 14 3 5 #"line2"
0 0 25 3 3 #") ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 5 #"line1"
0 0 25 3 4 #")) ("
0 0 14 3 12 #"intersection"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 5 #"line1"
0 0 25 3 2 #") "
0 0 14 3 5 #"line2"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 12 #"intersection"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 5 #"line1"
0 0 25 3 2 #") "
0 0 14 3 5 #"line2"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";Function that prints matrix"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 17 #"pretty-print-game"
0 0 25 3 1 #" "
0 0 14 3 5 #"board"
0 0 25 3 1 #" "
0 0 14 3 9 #"condition"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 25 3 3 #" (["
0 0 14 3 1 #"i"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 5 #"board"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 3 #"for"
0 0 25 3 3 #" (["
0 0 14 3 1 #"j"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 5 #"board"
0 0 25 3 4 #"))])"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 6 #"printf"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"~a\\t\""
0 0 25 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 25 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 25 3 1 #" "
0 0 14 3 5 #"board"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 2 #") "
0 0 14 3 1 #"j"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"newline"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"newline"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 14 3 9 #"condition"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 44 #";Funci\303\263n a llamar para que empiece el juego"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 3 #"TTT"
0 0 25 3 1 #" "
0 0 14 3 4 #"rows"
0 0 25 3 1 #" "
0 0 14 3 4 #"cols"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 48 #";Se crea la ventana donde se va a crear el juego"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"frame"
0 0 25 3 2 #" ("
0 0 14 3 3 #"new"
0 0 25 3 1 #" "
0 0 14 3 6 #"frame%"
0 0 25 3 2 #" ["
0 0 14 3 5 #"label"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"TTT\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ["
0 0 14 3 5 #"width"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 14 3 4 #"cols"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ["
0 0 14 3 6 #"height"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 14 3 4 #"rows"
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 43 #";Panel vertical que va a contener las filas"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"row-container"
0 0 25 3 2 #" ("
0 0 14 3 3 #"new"
0 0 25 3 1 #" "
0 0 14 3 15 #"vertical-panel%"
0 1 25 65 1 #"\t"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ["
0 0 14 3 6 #"parent"
0 0 25 3 1 #" "
0 0 14 3 5 #"frame"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 95
(
 #";Funci\303\263n que crea las filas (panel horizontal) en el contened"
 #"or, y las devuelve como una lista"
) 0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 18 #"; empezar en row 1"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"create-rows"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 1 #" "
0 0 14 3 4 #"rows"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 4 #" ( ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 1 #" "
0 0 14 3 4 #"rows"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 3 #"new"
0 0 25 3 1 #" "
0 0 14 3 17 #"horizontal-panel%"
0 1 25 65 1 #"\t"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ["
0 0 14 3 6 #"parent"
0 0 25 3 1 #" "
0 0 14 3 13 #"row-container"
0 0 25 3 1 #"]"
0 1 25 65 1 #"\t"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ["
0 0 14 3 10 #"min-height"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ["
0 0 14 3 18 #"stretchable-height"
0 0 25 3 1 #" "
0 0 22 3 2 #"#T"
0 0 25 3 5 #"])) ("
0 0 14 3 11 #"create-rows"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 2 #") "
0 0 14 3 4 #"rows"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"row-list"
0 0 25 3 2 #" ("
0 0 14 3 11 #"create-rows"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 4 #"rows"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 71
(
 #";Canvas con el override que se encarga de manejar los eventos del mo"
 #"use"
) 0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"my-canvas%"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"class"
0 0 25 3 1 #" "
0 0 14 3 7 #"canvas%"
0 0 25 3 1 #" "
0 0 17 3 26 #"; La clase base es canvas%"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 15 #"define/override"
0 0 25 3 2 #" ("
0 0 14 3 8 #"on-event"
0 0 25 3 1 #" "
0 0 14 3 5 #"event"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 5 #"event"
0 0 25 3 1 #" "
0 0 14 3 12 #"button-down?"
0 0 25 3 2 #") "
0 0 14 3 6 #"Enable"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"entry"
0 0 25 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 25 3 2 #" ("
0 0 14 3 4 #"read"
0 0 25 3 2 #" ("
0 0 14 3 17 #"open-input-string"
0 0 25 3 2 #" ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 4 #"this"
0 0 25 3 1 #" "
0 0 14 3 9 #"get-label"
0 0 25 3 6 #"))) ))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 17 3 14 #";(print entry)"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                 (("
0 0 14 3 7 #"miembro"
0 0 25 3 1 #" "
0 0 14 3 5 #"entry"
0 0 25 3 3 #"  ("
0 0 14 3 21 #"getAvailablePositions"
0 0 25 3 1 #" "
0 0 14 3 6 #"Matrix"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 6 #"Matrix"
0 0 25 3 2 #" ("
0 0 14 3 11 #"setAtMatrix"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 5 #"entry"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 25 3 1 #" "
0 0 14 3 5 #"entry"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"O"
0 0 25 3 1 #" "
0 0 14 3 6 #"Matrix"
0 0 25 3 3 #") )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 4 #"leer"
0 0 25 3 1 #" "
0 0 14 3 13 #"matriz-canvas"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"             "
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 6 #"ended?"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 6 #"Enable"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 14 3 11 #"sleep/yield"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 6 #"Enable"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 14 3 12 #"machine-turn"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        )"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  )"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 5 #"print"
0 0 25 3 1 #" "
0 0 19 3 18 #"\"Posicion ocupada\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                 ))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"              ))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"super-new"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 64
(
 #";Funci\303\263n que devuelve una matriz con todos los canvases cread"
 #"os"
) 0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"create-cols"
0 0 25 3 1 #" "
0 0 14 3 3 #"col"
0 0 25 3 1 #" "
0 0 14 3 4 #"cols"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 1 #" "
0 0 14 3 6 #"newrow"
0 0 25 3 1 #" "
0 0 14 3 4 #"rowl"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 4 #"rowl"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          (("
0 0 14 3 2 #"<="
0 0 25 3 1 #" "
0 0 14 3 3 #"col"
0 0 25 3 1 #" "
0 0 14 3 4 #"cols"
0 0 25 3 3 #") ("
0 0 14 3 11 #"create-cols"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 3 #"col"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 4 #"cols"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 1 #" "
0 0 14 3 6 #"newrow"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 3 #"new"
0 0 25 3 1 #" "
0 0 14 3 10 #"my-canvas%"
0 0 25 29 1 #"\n"
0 0 25 3 84
(
 #"                                                                    "
 #"               ["
) 0 0 14 3 6 #"parent"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 4 #"rowl"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 84
(
 #"                                                                    "
 #"               ["
) 0 0 14 3 5 #"style"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 6 #"border"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 84
(
 #"                                                                    "
 #"               ["
) 0 0 14 3 5 #"label"
0 0 25 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"'(\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 2 #") "
0 0 19 3 3 #"\" \""
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 1 #" "
0 0 14 3 3 #"col"
0 0 25 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 84
(
 #"                                                                    "
 #"               ["
) 0 0 14 3 9 #"min-width"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #"]"
0 1 25 65 1 #"\t"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 84
(
 #"                                                                    "
 #"               ["
) 0 0 14 3 10 #"min-height"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #"]"
0 1 25 65 1 #"\t"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 84
(
 #"                                                                    "
 #"               ["
) 0 0 14 3 17 #"stretchable-width"
0 0 25 3 1 #" "
0 0 22 3 2 #"#F"
0 0 25 3 1 #"]"
0 1 25 65 1 #"\t"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 84
(
 #"                                                                    "
 #"               ["
) 0 0 14 3 18 #"stretchable-height"
0 0 25 3 1 #" "
0 0 22 3 2 #"#F"
0 0 25 3 2 #"])"
0 0 17 3 59
#";; que contenga el canvas a ser insertado en el car de rowl"
0 0 25 29 1 #"\n"
0 0 25 3 81
(
 #"                                                                    "
 #"          )) "
) 0 0 14 3 4 #"rowl"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 6 #"newrow"
0 0 25 3 3 #") ("
0 0 14 3 11 #"create-cols"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 4 #"cols"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 4 #"() ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"rowl"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"matriz-canvas"
0 0 25 3 2 #" ("
0 0 14 3 11 #"create-cols"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 4 #"cols"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 14 3 8 #"row-list"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"primer-canvas"
0 0 25 3 2 #" ("
0 0 14 3 4 #"caar"
0 0 25 3 1 #" "
0 0 14 3 13 #"matriz-canvas"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 24 #"; Hacemos pens y brushes"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"no-pen"
0 0 25 3 2 #" ("
0 0 15 3 11 #"make-object"
0 0 25 3 1 #" "
0 0 14 3 4 #"pen%"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"BLACK\""
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 11 #"transparent"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"no-brush"
0 0 25 3 2 #" ("
0 0 15 3 11 #"make-object"
0 0 25 3 1 #" "
0 0 14 3 6 #"brush%"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"BLACK\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 11 #"transparent"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"red-pen"
0 0 25 3 2 #" ("
0 0 15 3 11 #"make-object"
0 0 25 3 1 #" "
0 0 14 3 4 #"pen%"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"RED\""
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"red-pen-dash"
0 0 25 3 2 #" ("
0 0 15 3 11 #"make-object"
0 0 25 3 1 #" "
0 0 14 3 4 #"pen%"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"RED\""
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 10 #"short-dash"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"blue-pen"
0 0 25 3 2 #" ("
0 0 15 3 11 #"make-object"
0 0 25 3 1 #" "
0 0 14 3 4 #"pen%"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"BLUE\""
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"blue-pen-dash"
0 0 25 3 2 #" ("
0 0 15 3 11 #"make-object"
0 0 25 3 1 #" "
0 0 14 3 4 #"pen%"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"BLUE\""
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 8 #"dot-dash"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 14 #"; Dibuja una x"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"draw-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 7 #"set-pen"
0 0 25 3 1 #" "
0 0 14 3 8 #"blue-pen"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"set-brush"
0 0 25 3 1 #" "
0 0 14 3 8 #"no-brush"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 2 #"80"
0 0 25 3 1 #" "
0 0 22 3 2 #"80"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 1 #" "
0 0 22 3 2 #"80"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 2 #"80"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 12 #";Dibuja un O"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"draw-o"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"set-brush"
0 0 25 3 1 #" "
0 0 14 3 8 #"no-brush"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 7 #"set-pen"
0 0 25 3 1 #" "
0 0 14 3 7 #"red-pen"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 12 #"draw-ellipse"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 2 #"60"
0 0 25 3 1 #" "
0 0 22 3 2 #"60"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 20 #";Se limpia el canvas"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"clear"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 5 #"clear"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"one-row"
0 0 25 3 1 #" "
0 0 14 3 4 #"rowl"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"rowl"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 8 #"row-list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #"("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 8 #"row-list"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 13 #"matriz-canvas"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 13 #"matriz-canvas"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 13 #"row-container"
0 0 25 3 1 #" "
0 0 14 3 12 #"delete-child"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 25 3 1 #" "
0 0 14 3 4 #"rowl"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 7 #"one-row"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"rowl"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"one-col"
0 0 25 3 1 #" "
0 0 14 3 4 #"canl"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"canl"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 4 #"send"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 8 #"row-list"
0 0 25 3 2 #") "
0 0 14 3 12 #"delete-child"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 25 3 1 #" "
0 0 14 3 4 #"canl"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 7 #"one-col"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"canl"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"one-canvas"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 5 #"frame"
0 0 25 3 1 #" "
0 0 14 3 12 #"delete-child"
0 0 25 3 1 #" "
0 0 14 3 13 #"row-container"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 3 #"can"
0 0 25 3 2 #" ("
0 0 14 3 3 #"new"
0 0 25 3 1 #" "
0 0 14 3 10 #"my-canvas%"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ["
0 0 14 3 6 #"parent"
0 0 25 3 1 #" "
0 0 14 3 5 #"frame"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ["
0 0 14 3 5 #"style"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 6 #"border"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ["
0 0 14 3 9 #"min-width"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 14 3 4 #"cols"
0 0 25 3 2 #")]"
0 1 25 65 1 #"\t"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ["
0 0 14 3 10 #"min-height"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 14 3 4 #"rows"
0 0 25 3 2 #")]"
0 1 25 65 1 #"\t"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ["
0 0 14 3 17 #"stretchable-width"
0 0 25 3 1 #" "
0 0 22 3 2 #"#F"
0 0 25 3 1 #"]"
0 1 25 65 1 #"\t"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ["
0 0 14 3 18 #"stretchable-height"
0 0 25 3 1 #" "
0 0 22 3 2 #"#F"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 13 #"primer-canvas"
0 0 25 3 1 #" "
0 0 14 3 3 #"can"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"victory"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"set-brush"
0 0 25 3 1 #" "
0 0 14 3 8 #"no-brush"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 7 #"set-pen"
0 0 25 3 1 #" "
0 0 14 3 12 #"red-pen-dash"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.3"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"sleep/yield"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 12 #"draw-ellipse"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.3"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.3"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"sleep/yield"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.7"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.7"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.9"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.825"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.775"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.825"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.7"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.775"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.9"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.9"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"sleep/yield"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.05"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.15"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.15"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.65"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.65"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"sleep/yield"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 12 #"draw-ellipse"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.3"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.3"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"sleep/yield"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.7"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.7"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.7"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.9"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.9"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.9"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"victory-aux"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    )"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"victory-aux"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"sleep/yield"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 5 #"clear"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"sleep/yield"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.3"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 12 #"draw-ellipse"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.3"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.3"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.7"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.7"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.9"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.825"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.775"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.825"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.7"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.775"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.9"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.9"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.05"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.15"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.15"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.65"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.65"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 12 #"draw-ellipse"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.3"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.3"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.7"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.7"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.7"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.9"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.9"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.9"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"victory-aux"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    )"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";Animaci\303\263n cuando el jugador pierde"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 15 3 6 #"defeat"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"set-brush"
0 0 25 3 1 #" "
0 0 14 3 8 #"no-brush"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 7 #"set-pen"
0 0 25 3 1 #" "
0 0 14 3 13 #"blue-pen-dash"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 2 #";P"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.325"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.325"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.325"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.45"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.15"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.45"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.15"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.45"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.45"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.325"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"sleep/yield"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 2 #";C"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.675"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.625"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.625"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.575"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.125"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.575"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.125"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.55"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.15"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.55"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.15"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.525"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.525"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.525"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.3"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.525"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.3"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.55"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.55"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.575"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.375"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.575"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.375"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.625"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.625"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.675"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"sleep/yield"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 2 #";W"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.05"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.15"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.15"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.65"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.65"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"sleep/yield"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 2 #";O"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 12 #"draw-ellipse"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.3"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.3"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"sleep/yield"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 2 #";N"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.7"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.7"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.7"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.9"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.9"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.9"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 10 #"defeat-aux"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 15 3 10 #"defeat-aux"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"sleep/yield"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 5 #"clear"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"sleep/yield"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.325"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.325"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.325"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.45"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.15"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.45"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.15"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.45"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.45"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.325"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.675"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.625"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.625"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.1"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.575"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.125"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.575"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.125"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.55"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.15"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.55"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.15"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.525"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.525"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.525"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.3"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.525"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.3"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.55"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.55"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.575"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.375"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.575"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.375"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.625"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.625"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 5 #"0.675"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.05"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.15"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.15"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.65"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.65"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 12 #"draw-ellipse"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.35"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.3"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.3"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.7"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.7"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.7"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.9"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-line"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.9"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.9"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 10 #"defeat-aux"
0 0 25 3 1 #" "
0 0 14 3 2 #"dc"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    )"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"leer"
0 0 25 3 1 #" "
0 0 14 3 7 #"matrizc"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"Matrix"
0 0 25 3 2 #") "
0 0 19 3 26 #"\"No movements left to win\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 8 #"for-each"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"row"
0 0 25 3 1 #" "
0 0 14 3 4 #"rowc"
0 0 25 3 3 #") ("
0 0 14 3 8 #"leer-aux"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 1 #" "
0 0 14 3 4 #"rowc"
0 0 25 3 4 #")) ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 6 #"Matrix"
0 0 25 3 2 #") "
0 0 14 3 7 #"matrizc"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           )"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"else"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 8 #"for-each"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"row"
0 0 25 3 1 #" "
0 0 14 3 4 #"rowc"
0 0 25 3 3 #") ("
0 0 14 3 8 #"leer-aux"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 1 #" "
0 0 14 3 4 #"rowc"
0 0 25 3 3 #")) "
0 0 14 3 6 #"Matrix"
0 0 25 3 1 #" "
0 0 14 3 7 #"matrizc"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           )"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          )"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"leer-aux"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 1 #" "
0 0 14 3 4 #"rowc"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 8 #"for-each"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"ele"
0 0 25 3 1 #" "
0 0 14 3 3 #"can"
0 0 25 3 3 #") ("
0 0 14 3 6 #"change"
0 0 25 3 1 #" "
0 0 14 3 3 #"ele"
0 0 25 3 1 #" "
0 0 14 3 3 #"can"
0 0 25 3 3 #")) "
0 0 14 3 3 #"row"
0 0 25 3 1 #" "
0 0 14 3 4 #"rowc"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"     ))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"change"
0 0 25 3 1 #" "
0 0 14 3 3 #"ele"
0 0 25 3 1 #" "
0 0 14 3 3 #"can"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 3 #"ele"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"X"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 5 #"clear"
0 0 25 3 2 #" ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 3 #"can"
0 0 25 3 1 #" "
0 0 14 3 6 #"get-dc"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 6 #"draw-x"
0 0 25 3 2 #" ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 3 #"can"
0 0 25 3 1 #" "
0 0 14 3 6 #"get-dc"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 3 #"ele"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"O"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 5 #"clear"
0 0 25 3 2 #" ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 3 #"can"
0 0 25 3 1 #" "
0 0 14 3 6 #"get-dc"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 6 #"draw-o"
0 0 25 3 2 #" ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 3 #"can"
0 0 25 3 1 #" "
0 0 14 3 6 #"get-dc"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 5 #"clear"
0 0 25 3 2 #" ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 3 #"can"
0 0 25 3 1 #" "
0 0 14 3 6 #"get-dc"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"          ))  "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"machine-turn"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 6 #"Matrix"
0 0 25 3 2 #" ("
0 0 14 3 8 #"putToken"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"O"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"X"
0 0 25 3 1 #" "
0 0 14 3 6 #"Matrix"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"leer"
0 0 25 3 1 #" "
0 0 14 3 13 #"matriz-canvas"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 6 #"ended?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    )"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"ended?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"Matrix"
0 0 25 3 2 #") "
0 0 19 3 26 #"\"No movements left to win\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 12 #"pretty-print"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"Tie\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 6 #"Enable"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #") "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      (("
0 0 14 3 12 #"checkVictory"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"O"
0 0 25 3 1 #" "
0 0 14 3 6 #"Matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 12 #"pretty-print"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"Player wins\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 11 #"sleep/yield"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 10 #"one-canvas"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 11 #"sleep/yield"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 7 #"victory"
0 0 25 3 2 #" ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 13 #"primer-canvas"
0 0 25 3 1 #" "
0 0 14 3 6 #"get-dc"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 14 3 4 #"rows"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 14 3 4 #"cols"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 6 #"Enable"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"       "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      (("
0 0 14 3 12 #"checkVictory"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"X"
0 0 25 3 1 #" "
0 0 14 3 6 #"Matrix"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 12 #"pretty-print"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"Computer wins\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 11 #"sleep/yield"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 10 #"one-canvas"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 11 #"sleep/yield"
0 0 25 3 1 #" "
0 0 22 3 4 #"0.25"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 15 3 6 #"defeat"
0 0 25 3 2 #" ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 13 #"primer-canvas"
0 0 25 3 1 #" "
0 0 14 3 6 #"get-dc"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 14 3 4 #"rows"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 14 3 4 #"cols"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"set!"
0 0 25 3 1 #" "
0 0 14 3 6 #"Enable"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"       "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"       "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      )"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    )"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 5 #"frame"
0 0 25 3 1 #" "
0 0 14 3 4 #"show"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"Matrix"
0 0 25 3 2 #" ("
0 0 14 3 14 #"generateMatrix"
0 0 25 3 1 #" "
0 0 14 3 4 #"rows"
0 0 25 3 1 #" "
0 0 14 3 4 #"cols"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"Enable"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"leer"
0 0 25 3 1 #" "
0 0 14 3 13 #"matriz-canvas"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 126
(
 #";###################################################################"
 #"##########################################################"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";turn 0 player, 1 computer"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"TTT_aux"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 8 #"game_aux"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"O"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"X"
0 0 25 3 2 #" ("
0 0 14 3 14 #"generateMatrix"
0 0 25 3 1 #" "
0 0 14 3 7 #"numrows"
0 0 25 3 1 #" "
0 0 14 3 7 #"numcols"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"game_aux"
0 0 25 3 1 #" "
0 0 14 3 7 #"player1"
0 0 25 3 1 #" "
0 0 14 3 7 #"player2"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #" "
0 0 14 3 4 #"turn"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 19 3 26 #"\"No movements left to win\""
0 0 25 3 3 #") ("
0 0 14 3 17 #"pretty-print-game"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 19 3 5 #"\"Tie\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 12 #"checkVictory"
0 0 25 3 1 #" "
0 0 14 3 7 #"player1"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #") ("
0 0 14 3 17 #"pretty-print-game"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"Player wins\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 12 #"checkVictory"
0 0 25 3 1 #" "
0 0 14 3 7 #"player2"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 3 #") ("
0 0 14 3 17 #"pretty-print-game"
0 0 25 3 2 #"  "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"Computer wins\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 17 #"pretty-print-game"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"InProgress\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       (("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 4 #"turn"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"entry"
0 0 25 3 2 #" ("
0 0 14 3 10 #"playerTurn"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          (("
0 0 14 3 7 #"miembro"
0 0 25 3 1 #" "
0 0 14 3 5 #"entry"
0 0 25 3 2 #" ("
0 0 14 3 21 #"getAvailablePositions"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 8 #"game_aux"
0 0 25 3 1 #" "
0 0 14 3 7 #"player1"
0 0 25 3 1 #" "
0 0 14 3 7 #"player2"
0 0 25 3 2 #" ("
0 0 14 3 11 #"setAtMatrix"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 5 #"entry"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 25 3 1 #" "
0 0 14 3 5 #"entry"
0 0 25 3 2 #") "
0 0 14 3 7 #"player1"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"else"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 5 #"print"
0 0 25 3 1 #" "
0 0 19 3 18 #"\"Posicion ocupada\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 8 #"game_aux"
0 0 25 3 1 #" "
0 0 14 3 7 #"player1"
0 0 25 3 1 #" "
0 0 14 3 7 #"player2"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 1 #" "
0 0 14 3 4 #"turn"
0 0 25 3 5 #") )))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"       "
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 8 #"game_aux"
0 0 25 3 1 #" "
0 0 14 3 7 #"player1"
0 0 25 3 1 #" "
0 0 14 3 7 #"player2"
0 0 25 3 2 #" ("
0 0 14 3 8 #"putToken"
0 0 25 3 1 #" "
0 0 14 3 7 #"player1"
0 0 25 3 1 #" "
0 0 14 3 7 #"player2"
0 0 25 3 1 #" "
0 0 14 3 6 #"matrix"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";Function that gets the user's input"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"playerTurn"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"Input Row: \""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 2 #" ("
0 0 14 3 9 #"read-line"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"Input Col: \""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 3 #"col"
0 0 25 3 2 #" ("
0 0 14 3 9 #"read-line"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 14 #"string->number"
0 0 25 3 1 #" "
0 0 14 3 3 #"row"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 14 #"string->number"
0 0 25 3 1 #" "
0 0 14 3 3 #"col"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0           0
